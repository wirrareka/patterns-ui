import { TimeStamped, Notable, Shipable, VatSummarizable } from '../interfaces';
import BaseModel from './base_model';
import Contact from './contact';
import DocumentItem from './document_item';
import bigDecimal from 'js-big-decimal';
export default class ItemDocument extends BaseModel implements Notable, Shipable, TimeStamped {
    code: string;
    note: string;
    state: string;
    items: DocumentItem[];
    vendor: Contact;
    customer: Contact;
    currency: string;
    paymentMethod: string;
    total: bigDecimal;
    totalWithVat: bigDecimal;
    shippingDate: Date;
    deliveryDate: Date;
    shippingPrice: bigDecimal;
    shippingPriceWithVat: bigDecimal;
    shippingService: string;
    shippingReference: string;
    weight: number;
    issuedBy: string;
    issuedById: string;
    signature: string;
    constructor(data: ItemDocument | any);
    get itemsTotal(): bigDecimal;
    get itemsTotalWithVat(): bigDecimal;
    recalculate(): void;
    newItem(): DocumentItem;
    numericCode(): string;
    workPrice(): bigDecimal;
    itemsPrice(): bigDecimal;
    get vats(): VatSummarizable[];
    protected get _json(): {
        code: string;
        note: string;
        state: string;
        items: {
            id: string;
            index: number;
            name: string;
            code: string;
            unit: string;
            quantity: number;
            price: string;
            unitPriceWithVat: string;
            vatPrice: string;
            linePrice: string;
            linePriceWithVat: string;
            currency: string;
            vat: number;
            vatTotalOnly: boolean;
            createdAt: Date;
            updatedAt: Date;
            custom1: string;
            custom2: string;
            custom3: string;
            custom4: string;
        }[];
        vendor: Contact;
        customer: Contact;
        currency: string;
        paymentMethod: string;
        total: string;
        totalWithVat: string;
        shippingDate: Date;
        deliveryDate: Date;
        shippingPrice: string;
        shippingPriceWithVat: string;
        shippingService: string;
        shippingReference: string;
        weight: number;
        issuedBy: string;
        issuedById: string;
        signature: string;
    };
}
